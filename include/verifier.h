#include "cv.h"
#include "highgui.h"
#include <unistd.h>
#include <sys/types.h>
#include <pwd.h> /* getpwdid */
#include <time.h>
#ifndef _INCL_GUARD_VER
#define _INCL_GUARD_VER




/**
* Structure of Face Images.
*/
typedef struct
{
    IplImage** faces; /**< Array of IplImage - of Faces */
    int count;/**< Total Number of Images */
}structFaceImages;

/**
* Structure of All Sets.
*/
typedef struct
{
    char **setName;/**< Name of the Set , This is a Unique Autogenerated Name */
    structFaceImages *faceImages;/**< Array of Structs of Face Images @see structFaceImages */
    char **setFilePathThumbnails/**< Array of Paths to Sample Images of Each Set , Currently 1.jpg */;
    int count/**< Total Number of Sets */;
}setFace;


/**
* Verifier Class. This is the Verifier Class used to Verify a Face.
*/
class verifier
{
public:
    /**
    *The Constructor
    *finds the Uid of the User Running the Verifier Object , and sets up Internal Information Accordingly
    */
    verifier();
    /**
    *The Constructor
    *Incase the user wants to override the Uid , for example , during Verification Phase
    */
    verifier(uid_t   userID);
    /**
    *Creates the MACE Filter , it Creates $HOME/.pam-face-authentication/model/$SETNAME_(FACE | EYE | INSIDE_FACE).XML
    */

    void createMaceFilter();
//Done

    /**
    *Adds a Set of Face Images , and calls createMaceFilter
    *@param set Set of IplImage of Faces
    *@param size Size of set
    *@see createMaceFilter
    */
    void addFaceSet(IplImage **set,int size);
//allFaces* getFaceImagesFromAllSet();
//Done
    /**
    *Removes the Set from $HOME/.pam-face-authentication/faces/$SETNAME/ , calls createMaceFilter afterwards
    *@param setName Name of the Set
    *@see createMaceFilter
    */
    void removeFaceSet(char* setName);
//Done

    /**
    *Returns All the Set of  Face Images of the current user
    *@result setFace - returns the All the Face Sets in a setFace structure
    *@see setFace
    */
    setFace* getFaceSet();


//TODO
    /**
    *VerifyFace - Does the Verification of the param image with the current user
    *@result 1 - Verified , 0 - Imposter
    */
    int verifyFace(IplImage *face);

    /**
    *contains the Path $HOME/.pam-face-authentication/faces
     */
    char facesDirectory[200];
    /**
    *contains the Path $HOME/.pam-face-authentication/model
     */
    char modelDirectory[200];
    /**
    *contains the Path $HOME/.pam-face-authentication/config
    */
    char configDirectory[200];


private:
    /**
    *returns a Unique name required to create a new Set
    *@result returns a unique string , uses date+time
    *@see addFaceSet
    */
    char * createSetDir();

    /**
    *Linux User Struct
    */
    struct passwd *userStruct;
};
#endif
